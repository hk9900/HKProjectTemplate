# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# macOS
.DS_Store

# IDEs
.vscode/
.idea/

# Temporary files
*.tmp
*.temp
*~

# Logs
*.log

# Environment variables
.env
.env.local
.env.*.local

# Firebase
GoogleService-Info.plist
GoogleService-Info-*.plist

# API Keys and Secrets
*Secret*.plist
*Keys*.plist
config.plist

# Test results
TestResults/
*.xcresult/

# Coverage reports
*.gcov
*.gcno
*.gcda
coverage/

# Profiling data
*.profraw

# Swift Package Manager
.swiftpm/

# App Store Connect API Key
AuthKey_*.p8

# Provisioning profiles
*.mobileprovision
*.provisionprofile

# Certificates
*.p12
*.cer
*.certSigningRequest

# Archive
*.xcarchive

# Simulator logs
~/Library/Logs/CoreSimulator/

# Xcode Cloud
.xcode-cloud/

# Local configuration files
LocalConfiguration.plist
LocalConfig.swift

# Backup files
*.backup
*.bak

# Temporary build files
*.swp
*.swo

# Documentation build
docs/_build/

# Node.js (if using for scripts)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Ruby (if using for scripts)
vendor/
Gemfile.lock

# Python (if using for scripts)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/

# JetBrains IDEs
.idea/
*.iml
*.ipr
*.iws

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Project specific
# Add any project-specific files or directories to ignore here
